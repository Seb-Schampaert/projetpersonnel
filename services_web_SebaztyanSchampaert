--Sebaztyan Schampaert
CREATE PROCEDURE "DBA"."getProduits"()
RESULT (id int, lib varchar(20), libUnit varchar(10))
BEGIN
    call sa_set_http_header('Content-Type','application:json; charset=utf-8');
    SELECT prodID, prodLib, unitLib
    FROM tbProduits 
    NATURAL JOIN tbUnites
END

CREATE SERVICE "getProduits"
    TYPE 'JSON'
    AUTHORIZATION OFF
    USER "DBA"
    URL ON
    METHODS 'GET'
AS call dba.getProduits();

CREATE PROCEDURE "DBA"."recupererFrigo"(@userID int)
RESULT (lib varchar(16), quant int, libUnit varchar(10))
BEGIN
    call sa_set_http_header('Content-Type','application:json; charset=utf-8');
    SELECT prodLib, prodQuant, unitLib
    FROM tbFrigo
    NATURAL JOIN tbProduits
    NATURAL JOIN tbUnites
    WHERE usrID = @userID;
END

CREATE SERVICE "recupererFrigo"
    TYPE 'JSON'
    AUTHORIZATION OFF
    USER "DBA"
    URL ON
    METHODS 'GET'
AS call dba.recupererFrigo(:userID)



CREATE PROCEDURE "DBA"."ajouterFrigo"(@produits int, @quantite int, @userID int)
--Sebaztyan Schampaert
BEGIN
    declare quant int;
    call sa_set_http_header('Access-Control-Allow-Origin', '*');   

    IF (testFrigo(@produits, @userID)= 'false') --test si la combinaison userId et prodId est deja present dans le frigo
        THEN INSERT INTO tbFrigo(usrID, prodID,prodQuant) values (@userID, @produits, @quantite)--si non, on ajoute normalement
    ELSE 
        BEGIN
            --si oui, on sauvegarde la quantitee precedente et on met a jour le resultat 
            set quant = (select prodQuant from tbFrigo WHERE usrID = @userId AND prodID = @produits);-
            UPDATE tbFrigo SET usrID = @userID, prodID = @produits, prodQuant = @quantite + quant 
            WHERE usrID = @userId AND prodID = @produits;
        END
    endif;
END

CREATE SERVICE "ajouterFrigo"
    TYPE 'RAW'
    AUTHORIZATION OFF
    USER "DBA"
    URL ON
    METHODS 'GET'
AS call dba.ajouterFrigo(:produits, :quantite, :userID)


--cette fonction permet a la procedure ajouterFrigo de voir si une instance d'un certain produit et user sont deja present
CREATE FUNCTION "DBA"."testFrigo"(@produits int, @userID int)
RETURNS varchar(7)--retourne vrai si il y a deja une instance
BEGIN
    IF EXISTS (SELECT usrID FROM tbFrigo WHERE prodID = @produits AND usrID = @userID)
       THEN return ('true');
    ELSE
       return ('false');
    endif;
END
